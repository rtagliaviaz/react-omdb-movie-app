{"version":3,"sources":["types/favoriteMoviesTypes.js","actions/favoriteMoviesActions.js","components/General/Spinner.js","components/Home.js","components/Movie.js","App.js","reducers/favoriteMoviesReducer.js","reducers/index.js","index.js"],"names":["LOADING","ERROR","GET_FAVORITE_MOVIES","GET_LAST_SEARCH","GET_LAST_MOVIE_LIST","addToFavorites","movie","dispatch","getState","newMovie","favoriteMoviesReducer","favoriteMovies","push","type","payload","removeFromFavorites","movieId","newMovieList","remove","lastMovieList","favoriteMoviePosition","map","x","imdbID","indexOf","splice","moviePosition","favorite","getLastMovieList","list","Spinner","className","Home","useSelector","store","lastSearch","loader","error","useDispatch","useState","loading","setLoading","setList","setMovie","searchError","setSearchError","useEffect","length","forEach","favMovie","includes","getInfo","a","axios","get","res","lista","data","Search","li","i","Title","Poster","Year","favoriteMoviesActions","src","alt","placeholder","onChange","e","target","value","onKeyPress","key","index","onClick","preventDefault","updatedList","test","to","pathname","state","api","apiKey","Movie","props","history","useHistory","details","setDetails","added","setAdded","undefined","location","movieID","then","match","url","slice","goBack","Runtime","Rated","Ratings","Value","Plot","Actors","split","actor","Genre","genre","Director","director","App","exact","path","component","INITIAL_STATE","combineReducers","action","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7ecabe2d.chunk.js","sourcesContent":["export const LOADING = 'loading'\r\nexport const ERROR = 'error'\r\nexport const GET_FAVORITE_MOVIES = 'get_favorite_movies'\r\nexport const GET_LAST_SEARCH = \"get_last_search\"\r\nexport const GET_LAST_MOVIE_LIST = \"get_last_movie_list\"","import { \r\n  ERROR, \r\n  LOADING, \r\n  GET_FAVORITE_MOVIES,\r\n  GET_LAST_SEARCH,\r\n  GET_LAST_MOVIE_LIST\r\n} from '../types/favoriteMoviesTypes'\r\n\r\nexport const addToFavorites = (movie) => (dispatch, getState) => {\r\n  const {favoriteMovies} = getState().favoriteMoviesReducer;\r\n\r\n  const newMovie = favoriteMovies\r\n  \r\n  newMovie.push(movie)\r\n  // console.log(favoriteMovies)\r\n  dispatch({\r\n    type: GET_FAVORITE_MOVIES,\r\n    payload: newMovie\r\n  })\r\n}\r\n\r\nexport const removeFromFavorites = (movieId) => (dispatch, getState) => {\r\n  const {favoriteMovies, lastMovieList} = getState().favoriteMoviesReducer;\r\n\r\n  \r\n  const newMovieList = favoriteMovies;\r\n  const remove = lastMovieList\r\n\r\n  let favoriteMoviePosition = newMovieList.map(x => {return x.imdbID}).indexOf(movieId)\r\n    if(favoriteMoviePosition > -1){\r\n      newMovieList.splice(favoriteMoviePosition, 1)\r\n    }\r\n\r\n   \r\n  let moviePosition = remove.map(x => {return x.imdbID}).indexOf(movieId)\r\n    if(moviePosition > -1){\r\n      remove[moviePosition].favorite = false\r\n    }\r\n    // console.log(remove)\r\n\r\n  \r\n  \r\n      \r\n  dispatch({\r\n    type: GET_FAVORITE_MOVIES,\r\n    payload: newMovieList\r\n  })\r\n} \r\n\r\n//add to another reducers\r\n\r\n//save last search\r\nexport const getLastSearch = (movie) => (dispatch) => {\r\n  dispatch({\r\n    type: GET_LAST_SEARCH,\r\n    payload: movie\r\n  })\r\n}\r\n\r\nexport const getLastMovieList = (list) => (dispatch) => {\r\n\r\n  dispatch({\r\n    type: GET_LAST_MOVIE_LIST,\r\n    payload: list\r\n  })\r\n}","import React from 'react'\r\nimport './Spinner.css'\r\n\r\nconst Spinner = () => {\r\n  return (\r\n    <div className=\"centerSpinner\">\r\n      <div className=\"lds-ripple\"><div></div><div></div></div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Spinner\r\n","import React, {useState, useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\n//actions\r\nimport * as favoriteMoviesActions from '../actions/favoriteMoviesActions'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport axios from 'axios'\r\n\r\nimport Spinner from './General/Spinner'\r\n//api\r\nconst api = 'http://www.omdbapi.com/?'\r\n//api key\r\nconst apiKey = 'apikey=18eaeb4f'\r\n\r\nconst Home = () => {\r\n  //useSelector and useDispatch\r\n  const {favoriteMovies, lastSearch, lastMovieList, loader, error} = useSelector(store => store.favoriteMoviesReducer)\r\n  const dispatch = useDispatch()\r\n\r\n  const [loading, setLoading] = useState(false)\r\n  const [list, setList] = useState([])\r\n  const [movie, setMovie] = useState('')\r\n  const [searchError, setSearchError] = useState(false)\r\n\r\n  // console.log(searchError)\r\n  useEffect(() => {\r\n\r\n    if (lastSearch !== '' && lastMovieList.length > 0) {\r\n      setMovie(lastSearch)\r\n      //if the movie is in the favorite list it will mark the movie as favorite\r\n      lastMovieList.forEach(movie => {\r\n        favoriteMovies.forEach(favMovie => {\r\n          if (movie.imdbID.includes(favMovie.imdbID)) {\r\n            movie.favorite = true\r\n          }\r\n        })\r\n      })\r\n      setList(lastMovieList)\r\n    }\r\n    \r\n  }, [])\r\n\r\n  //get response from API\r\n  const getInfo = async () => {\r\n    setLoading(true)\r\n    try {\r\n    // console.log(movie)\r\n    const res = await axios.get(`${api}${apiKey}&s=${movie}&type=movie&page=1`)\r\n      \r\n        if (res) {\r\n          const lista = []\r\n          res.data.Search.map((li, i) => (\r\n            lista[i] = {\r\n              ...lista[i],\r\n              favorite: false,\r\n              imdbID: li.imdbID,\r\n              Title: li.Title,\r\n              Poster: li.Poster,\r\n              Year: li.Year\r\n            }\r\n          ))\r\n\r\n        //if the movie is in the favorite list it will mark the movie as favorite\r\n        lista.forEach(movie => {\r\n          favoriteMovies.forEach(favMovie => {\r\n            if (movie.imdbID.includes(favMovie.imdbID)) {\r\n              movie.favorite = true\r\n            }\r\n          })\r\n        })\r\n        // console.log('lista', lista)\r\n        dispatch(favoriteMoviesActions.getLastMovieList(lista))\r\n        setList(lista)\r\n        setSearchError(false)\r\n        setLoading(false)\r\n        // console.log('list', list)\r\n      }\r\n  \r\n    } catch (error) {\r\n      // console.log(error)\r\n        setLoading(false)\r\n        setSearchError(true)\r\n    }\r\n    // .catch(err => {\r\n      \r\n    // })\r\n    \r\n  }\r\n\r\n  //empty state\r\n  const noMovies = () => {\r\n    if (searchError) {\r\n      return(\r\n        <div>\r\n          <div className=\"homeLogo\">\r\n            <img src=\"/assets/Logo.png\" alt=\"\"/>\r\n          </div>\r\n          <div className=\"homeMsg\">\r\n            <p className=\"primary\">Cannot find movies with that name, please search for another</p>\r\n            {/* <p className=\"secondary\">Here's an offer you can't refuse</p> */}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    return(\r\n      <div>\r\n        <div className=\"homeLogo\">\r\n          <img src=\"/assets/Logo.png\" alt=\"\"/>\r\n        </div>\r\n        <div className=\"homeMsg\">\r\n          <p className=\"primary\">Don't Know what to search?</p>\r\n          <p className=\"secondary\">Here's an offer you can't refuse</p>\r\n        </div>\r\n        \r\n      </div>\r\n    )\r\n  }\r\n  \r\n  const test = (e, imdbID, Title, Year, Poster, favorite, index) => {\r\n    e.preventDefault()\r\n    // console.log(index)\r\n    const updatedList = [\r\n      ...list\r\n    ]\r\n\r\n    // console.log('updated', updatedList)\r\n\r\n    updatedList[index] = {\r\n      ...list[index],\r\n      favorite: !favorite\r\n    }\r\n\r\n    setList(updatedList)\r\n\r\n    const newFavorite = {\r\n      Poster,\r\n      Title,\r\n      Year,\r\n      favorite: true,\r\n      imdbID\r\n    }\r\n    \r\n    //if is already favorite then remove it from favorite list\r\n    if (favorite === true) {\r\n      dispatch(favoriteMoviesActions.removeFromFavorites(imdbID))\r\n      // let favoriteMoviePosition = favoriteMovies.map(x => {return x.imdbID}).indexOf(imdbID)\r\n      // // console.log(favoriteMoviePosition)\r\n      // if(favoriteMoviePosition > -1){\r\n      //   favoriteMovies.splice(favoriteMoviePosition, 1)\r\n      // }\r\n      return\r\n    } \r\n    dispatch(favoriteMoviesActions.addToFavorites(newFavorite))\r\n    // add movie to favorite movies list\r\n    // setFavoriteMovies(favoriteMovies=>[...favoriteMovies, newFavorite])\r\n  }\r\n\r\n  // console.log(movie)\r\n\r\n  const movieList = () => {\r\n    if (loading) {\r\n      return(\r\n        <Spinner></Spinner>\r\n      )\r\n    }\r\n    if (searchError) {\r\n      return(\r\n        <div>\r\n          <div className=\"homeLogo\">\r\n            <img src=\"/assets/Logo.png\" alt=\"\"/>\r\n          </div>\r\n          <div className=\"homeMsg\">\r\n            <p className=\"primary\">Cannot find movies with that name, please search for another</p>\r\n            {/* <p className=\"secondary\">Here's an offer you can't refuse</p> */}\r\n          </div>\r\n        </div>\r\n      )\r\n    }\r\n    if (list.length > 0) {\r\n      return(\r\n        <div className=\"movies\">\r\n          \r\n            {list.map((li, index) => (<div className=\"movie\" key={li.imdbID}>\r\n              \r\n                  <div className=\"favorite\" onClick={e => test(e, li.imdbID, li.Title, li.Year, li.Poster, li.favorite, index)}>\r\n                    {li.favorite ? <img src=\"/assets/icons/icon-heart-full.png\" alt=\"\" className=\"icon\"/> : <img src=\"/assets/icons/icon-heart-white.png\" alt=\"\" className=\"icon\" />}\r\n                  </div>\r\n                  \r\n                  <Link\r\n                  className=\"invisibleButton\"\r\n                  to={{\r\n                    // pathname: \"/details/\",\r\n                    pathname: `/details/${li.imdbID}`,\r\n                    state:{'movieID': li.imdbID, 'lastSearch': movie}\r\n                  }}\r\n                  />\r\n          \r\n                  \r\n                  <p className=\"movieTitle\" >{li.Title}</p>\r\n                  <p className=\"movieYear\">{li.Year}</p>\r\n                \r\n                <img src={li.Poster} alt=\"\" className=\"moviePoster\" />\r\n              \r\n              \r\n            </div>))}\r\n        <div className=\"empty-space\"></div>\r\n        <div className=\"empty-space\"></div>\r\n        <div className=\"empty-space\"></div>\r\n\r\n      </div>\r\n      \r\n      )\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  return (\r\n    <div >\r\n      <div className=\"searchBar\">\r\n        <img src=\"\" alt=\"\"/>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"Search movies...\"\r\n          onChange={e => setMovie(e.target.value)}\r\n          onKeyPress={e => {\r\n            if (e.key === 'Enter') {\r\n              getInfo()\r\n              setSearchError(false)\r\n              dispatch(favoriteMoviesActions.getLastSearch(movie))\r\n            }\r\n          }}\r\n          />\r\n      </div>\r\n      <div className=\"content\">\r\n        {list.length >0 ? movieList() : noMovies()}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Home\r\n","import React, {useState, useEffect} from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport './Movie.css'\r\nimport axios from 'axios'\r\n\r\n//general\r\nimport Spinner from './General/Spinner'\r\n//actions\r\nimport * as favoriteMoviesActions from '../actions/favoriteMoviesActions'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\n//api\r\nconst api = 'http://www.omdbapi.com/?'\r\n//api key\r\nconst apiKey = 'apikey=18eaeb4f'\r\n\r\nconst Movie = (props) => {\r\n  let history = useHistory();\r\n  //useSelector and useDispatch\r\n  const {favoriteMovies, loader, error} = useSelector(store => store.favoriteMoviesReducer)\r\n  const dispatch = useDispatch()\r\n\r\n  // console.log((props.match.url).slice(9, 18)) // movie id\r\n\r\n  const [details, setDetails] = useState()\r\n  const [added, setAdded] = useState(false)\r\n  //get movie details\r\n  useEffect(() => {\r\n    if (props.location.state !== undefined) {\r\n      axios.get(api+apiKey+`&i=${props.location.state.movieID}`)\r\n      .then(res => {\r\n        if (res) {\r\n          setDetails(res.data)\r\n        } \r\n      })\r\n    } else {\r\n      axios.get(api+apiKey+`&i=${(props.match.url).slice(9, 18)}`)\r\n      .then(res => {\r\n        if (res) {\r\n          setDetails(res.data)\r\n        } else {\r\n          // console.log('error')\r\n        }\r\n      })\r\n    }\r\n  }, [])\r\n\r\nuseEffect(() => {\r\n  if (details && favoriteMovies.map(x => {return x.imdbID}).includes(details.imdbID)) {\r\n    setAdded(true)\r\n  }\r\n}, [details])\r\n  \r\n  const removeFromFavorites = (e, movieId) => {\r\n    e.preventDefault()\r\n    if (added) {\r\n      setAdded(!added)\r\n      dispatch(favoriteMoviesActions.removeFromFavorites(movieId))\r\n      return\r\n    }\r\n  }\r\n  // console.log(details)\r\n  const addtoFavorites = (e, Poster, Title, Year, imdbID) => {\r\n    const movie = {\r\n      Poster,\r\n      Title,\r\n      Year,\r\n      favorite: true,\r\n      imdbID\r\n    }\r\n    dispatch(favoriteMoviesActions.addToFavorites(movie))\r\n    // console.log('added')\r\n    setAdded(!added)\r\n  }\r\n\r\n  // const goBack = (e) => {\r\n  //   e.preventDefault()\r\n  //   history.push({pathname:'/', state:{'movie':searched}})\r\n  // }\r\n  // const cast = details.Actors.split(\", \")\r\n  // console.log('cast', cast.map(actor => (actor)))\r\n  return (\r\n    \r\n    <div>\r\n      {details === undefined ? <Spinner /> : <div>\r\n        <div\r\n          className=\"btn__return\"\r\n          onClick={() => history.goBack()}\r\n          // to={{\r\n          //   pathname: \"/\",\r\n          // }}\r\n          >\r\n          <img src=\"/assets/icons/icon-arrow-grey.png\" alt=\"\" />\r\n        </div>\r\n      <div className=\"movie-info\">\r\n        <div className=\"info\">\r\n          <div className=\"info__title-year-rate\">\r\n            <p>{details.Runtime} · {details.Year} · <b className=\"info__title-year-rate__rate\">{details.Rated}</b></p>\r\n          </div>\r\n          <div className=\"info__title-year-rate__title\">\r\n            <p>{details.Title}</p>\r\n          </div>\r\n          \r\n          <div className=\"labels\">\r\n            <div className=\"labels__imdb\">\r\n              <div className=\"logo\">\r\n              <img src=\"/assets/logos/logo-imdb.png\" alt=\"\"/>\r\n              </div>\r\n              <div className=\"rating\">\r\n                <p>{details.Ratings[0].Value}</p>\r\n              </div>\r\n            </div>\r\n            {details.Ratings.length > 1 ? \r\n            <div className=\"labels__rottenTomatoes\">\r\n             \r\n                <div className=\"logo\">\r\n                  <img src=\"/assets/logos/logo-rotten-tomatoes.png\" alt=\"\"/>\r\n                </div>\r\n              \r\n              <div className=\"rating\">\r\n                <p>{details.Ratings[1].Value}</p>\r\n              </div> \r\n              \r\n            </div>\r\n            : null}\r\n            \r\n              {!added ? \r\n              <div className=\"labels__favorite\" onClick={e =>addtoFavorites(e, details.Poster, details.Title, details.Year, details.imdbID)}>\r\n                <div className=\"icon\">\r\n                <img src=\"/assets/icons/icon-heart-grey.png\" alt=\"\"/>\r\n                </div>\r\n                <div className=\"text\">\r\n                <p>Add to favourites</p>\r\n                </div>\r\n              </div> :\r\n              <div className=\"labels__favorite favAdded\" onClick={e =>removeFromFavorites(e, details.imdbID)}>\r\n              <div className=\"icon\">\r\n              <img src=\"/assets/icons/icon-heart-full.png\" alt=\"\"/>\r\n              </div>\r\n              <div className=\"text added\">\r\n              <p>Added</p>\r\n              </div>\r\n              </div> }\r\n            \r\n          </div>\r\n          \r\n          <div className=\"plot-segment\">\r\n            <p className=\"segment-title\">Plot</p>\r\n            <p className=\"segment-info\">{details.Plot}</p>\r\n          </div>\r\n          <div className=\"cast-genre-director\">\r\n            <div className=\"cast-segment\">\r\n              <p className=\"segment-title\">Cast</p>\r\n              {/* <p >{details.Actors.split(\", \")}</p> */}\r\n              {details.Actors.split(\", \").map(actor => (\r\n                <p className=\"segment-info\" key={actor}>{actor}</p>\r\n              ))}\r\n            </div>\r\n            <div className=\"genre-segment\">\r\n              <p className=\"segment-title\">Genre</p>\r\n              {details.Genre.split(\", \").map(genre => (\r\n               <p className=\"segment-info\" key={genre}>{genre}</p>\r\n              ))}\r\n            </div>\r\n            <div className=\"director-segment\">\r\n              <p className=\"segment-title\">Director</p>\r\n              {/* <p className=\"segmentInfo\">{details.Director}</p> */}\r\n              {details.Director.split(\", \").map(director => (\r\n               <p className=\"segment-info\" key={director}>{director}</p>\r\n              ))}\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"poster\">\r\n          <img src={details.Poster} alt=\"\"/>\r\n        </div>\r\n      </div>\r\n        </div>}\r\n      \r\n    </div>\r\n  )\r\n}\r\nexport default Movie\r\n","// import {Link,BrowserRouter, Route, Switch } from 'react-router-dom'\nimport { HashRouter, Route } from 'react-router-dom'\n//components\nimport Home from './components/Home'\nimport Movie from './components/Movie'\n// import FavoriteMovies from './components/FavoriteMovies'\n\nconst App = () => {\n  return (\n      <div className=\"App\">\n        {/* <BrowserRouter> */}\n        <HashRouter >\n          {/* <Switch> */}\n          <>\n            <Route exact path='/' component={Home}/>\n            <Route exact path='/details/:imdbId' component={Movie}/>\n          </>\n          {/* </Switch> */}\n        </HashRouter>\n        {/* </BrowserRouter> */}\n      </div>\n  );\n}\n\nexport default App;\n","import {\r\n  LOADING,\r\n  ERROR,\r\n  GET_FAVORITE_MOVIES,\r\n  GET_LAST_SEARCH,\r\n  GET_LAST_MOVIE_LIST\r\n} from '../types/favoriteMoviesTypes'\r\n\r\nconst INITIAL_STATE = {\r\nloader: false,\r\nerror: '',\r\nfavoriteMovies: [],\r\nlastSearch: '',\r\nlastMovieList: []\r\n}\r\n\r\nexport default (state = INITIAL_STATE, action) => {\r\n\r\n  switch(action.type) {\r\n\r\n    case GET_LAST_MOVIE_LIST:\r\n      return{\r\n        ...state,\r\n        lastMovieList: action.payload\r\n      }\r\n\r\n    case GET_LAST_SEARCH:\r\n      return{\r\n        ...state,\r\n        lastSearch: action.payload\r\n      }\r\n\r\n    case GET_FAVORITE_MOVIES:\r\n      return {\r\n        ...state,\r\n        favoriteMovies: action.payload,\r\n        loader: false,\r\n        error: ''\r\n      }\r\n\r\n    case LOADING:\r\n      return {\r\n        ...state,\r\n        loader: true\r\n      }\r\n\r\n    case ERROR:\r\n      return {\r\n        ...state,\r\n        loader: false,\r\n        error: action.payload\r\n      }\r\n    \r\n    default: return state\r\n  }\r\n  \r\n}","import {combineReducers} from 'redux'\r\n\r\n//reducers\r\nimport favoriteMoviesReducer from './favoriteMoviesReducer'\r\n\r\nexport default combineReducers ({\r\n  favoriteMoviesReducer\r\n})","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n//redux\nimport {createStore, applyMiddleware} from 'redux'\nimport {Provider} from 'react-redux'\nimport reduxThunk from 'redux-thunk'\nimport reducers from './reducers'\n\nconst store = createStore(\n  reducers,\n  {},\n  applyMiddleware(reduxThunk)\n)\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}